<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MemoryCache.Testing.Common</name>
    </assembly>
    <members>
        <member name="T:MemoryCache.Testing.Common.CacheEntryFake">
            <summary>
                A fake cache entry.
            </summary>
        </member>
        <member name="M:MemoryCache.Testing.Common.CacheEntryFake.#ctor(System.Object)">
            <summary>
                Constructor.
            </summary>
            <param name="key">The cache entry key.</param>
        </member>
        <member name="M:MemoryCache.Testing.Common.CacheEntryFake.#ctor(System.Object,Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary>
                Constructor.
            </summary>
            <param name="key">The cache entry key.</param>
            <param name="mockedMemoryCache">The mocked memory cache instance.</param>
        </member>
        <member name="M:MemoryCache.Testing.Common.CacheEntryFake.Dispose">
            <inheritdoc />
        </member>
        <member name="P:MemoryCache.Testing.Common.CacheEntryFake.Key">
            <inheritdoc />
        </member>
        <member name="P:MemoryCache.Testing.Common.CacheEntryFake.Value">
            <inheritdoc />
        </member>
        <member name="P:MemoryCache.Testing.Common.CacheEntryFake.AbsoluteExpiration">
            <inheritdoc />
        </member>
        <member name="P:MemoryCache.Testing.Common.CacheEntryFake.AbsoluteExpirationRelativeToNow">
            <inheritdoc />
        </member>
        <member name="P:MemoryCache.Testing.Common.CacheEntryFake.SlidingExpiration">
            <inheritdoc />
        </member>
        <member name="P:MemoryCache.Testing.Common.CacheEntryFake.ExpirationTokens">
            <inheritdoc />
        </member>
        <member name="P:MemoryCache.Testing.Common.CacheEntryFake.PostEvictionCallbacks">
            <inheritdoc />
        </member>
        <member name="P:MemoryCache.Testing.Common.CacheEntryFake.Priority">
            <inheritdoc />
        </member>
        <member name="P:MemoryCache.Testing.Common.CacheEntryFake.Size">
            <inheritdoc />
        </member>
        <member name="T:MemoryCache.Testing.Common.Extensions.TypeExtensions">
            <summary>
                Extensions for the type type.
            </summary>
        </member>
        <member name="M:MemoryCache.Testing.Common.Extensions.TypeExtensions.GetDefaultValue(System.Type)">
            <summary>
                Gets the default value for the specified type.
            </summary>
            <param name="type">The type instance.</param>
            <returns>The default value for the specified type.</returns>
        </member>
        <member name="T:MemoryCache.Testing.Common.Helpers.EnsureArgument">
            <summary>
                A helper to perform checks on arguments.
            </summary>
        </member>
        <member name="M:MemoryCache.Testing.Common.Helpers.EnsureArgument.IsNotNullOrEmpty(System.String,System.String)">
            <summary>
                Ensures that a string argument is not null or empty.
            </summary>
            <param name="string">The string argument.</param>
            <param name="argumentName">The argument name.</param>
            <returns>The string argument.</returns>
            <exception cref="T:System.ArgumentNullException">If the string argument is null.</exception>
            <exception cref="T:System.ArgumentException">If the string argument is empty.</exception>
        </member>
        <member name="M:MemoryCache.Testing.Common.Helpers.EnsureArgument.IsNotNull``1(``0,System.String)">
            <summary>
                Ensures that an argument is not null.
            </summary>
            <typeparam name="T">The argument type.</typeparam>
            <param name="argument">The argument.</param>
            <param name="argumentName">The argument name.</param>
            <returns>The argument.</returns>
            <exception cref="T:System.ArgumentNullException">If the argument is null.</exception>
        </member>
        <member name="M:MemoryCache.Testing.Common.Helpers.EnsureArgument.IsNotEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
                Ensures that a sequence is not empty.
            </summary>
            <typeparam name="T">The enumerable item type.</typeparam>
            <param name="enumerable">The enumerable argument.</param>
            <param name="argumentName">The enumerable argument name.</param>
            <returns>The enumerable argument.</returns>
        </member>
        <member name="T:MemoryCache.Testing.Common.Helpers.LoggerHelper">
            <summary>
                A helper for creating loggers.
            </summary>
        </member>
        <member name="P:MemoryCache.Testing.Common.Helpers.LoggerHelper.LoggerFactory">
            <summary>
                Gets or sets the logger factory used to create loggers.
            </summary>
        </member>
        <member name="M:MemoryCache.Testing.Common.Helpers.LoggerHelper.CreateLogger``1">
            <summary>
                Creates a new logger instance using the full name of the specified type.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <returns>A new logger instance.</returns>
        </member>
        <member name="M:MemoryCache.Testing.Common.Helpers.LoggerHelper.CreateLogger(System.String)">
            <summary>
                Creates a new logger instance.
            </summary>
            <param name="categoryName">The category name for messages produced by the logger.</param>
            <returns>A new logger instance.</returns>
        </member>
        <member name="M:MemoryCache.Testing.Common.Helpers.LoggerHelper.CreateLogger(System.Type)">
            <summary>
                Creates a new logger instance using the full name of the specified type.
            </summary>
            <param name="type">The type.</param>
            <returns>A new logger instance.</returns>
        </member>
    </members>
</doc>
